{"version":3,"sources":["logo.svg","categories/ChargeRow.jsx","categories/CurrentBalance.jsx","categories/CategoriesPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["options","value","label","ChargeRow","id","category","description","date","money","onChargeChange","onSaveNewCharge","onCancelNewCharge","onChange","selectedOption","Form","Control","type","placeholder","target","formatDate","parseDate","onDayChange","day","className","onClick","CurrentBalance","Row","Col","md","span","offset","CategoriesPage","storedCharges","JSON","parse","localStorage","getItem","useState","charges","setCharges","newCharge","setNewCharge","editableChargeId","setEditableChargeId","handleSaveEditableCharge","updatedCharges","map","charge","setItem","stringify","handleCancelNewCharge","handleChargeChange","buildChargeRow","handleEditCharge","arrayCharges","filter","handleDeleteCharge","Container","Tabs","defaultActiveKey","Tab","eventKey","title","uuidv4","Date","Table","striped","bordered","hover","header","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b83cf8d3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { Form, Dropdown, DropdownButton } from 'react-bootstrap';\nimport Select from 'react-select';\nimport React from 'react';\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\nimport 'react-day-picker/lib/style.css';\nimport MomentLocaleUtils, {\n  formatDate,\n  parseDate,\n} from 'react-day-picker/moment';\n\n\nconst options = [\n  \t{ value: 'food', label: 'Food' },\n  \t{ value: 'clothes', label: 'Clothes' },\n\t{ value: 'restaurant', label: 'Restaurant' },\n\t{ value: 'utility bills', label: 'Utility bills' },\n  \t{ value: 'pets', label: 'Pets' },\n];\n\nfunction ChargeRow({id, category, description, date, money, onChargeChange, onSaveNewCharge, onCancelNewCharge}) {\n\treturn (\n\t\t<tr>\n\t\t\t<td>\n\t\t\t\t<Select\n\t\t\t\t\tvalue={{value: category, label: category}}\n\t\t\t\t\tonChange={(selectedOption) => onChargeChange({id, description, date, money, category: selectedOption.value})}\n\t\t\t\t\toptions={options}\n      \t/>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<Form.Control\n\t\t\t\t type=\"text\" \n\t\t\t\t placeholder=\"Description\" \n\t\t\t\t onChange={({target}) => onChargeChange({id, description: target.value, date, money, category})} \n\t\t\t\t value={description}/>\n\t\t\t\t </td>\n\t\t\t\t <td>\n\t\t\t\t <DayPickerInput\n        formatDate={formatDate}\n        parseDate={parseDate}\n\t\t\t\tvalue={formatDate(date)}\n\t\t\t\tonDayChange={day => onChargeChange({id, description, date: formatDate(day), money, category})}\n      \t/>\n\t\t\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<Form.Control \n\t\t\t\ttype=\"text\" \n\t\t\t\tplaceholder=\"Money\" \n\t\t\t\tonChange={({target}) => onChargeChange({id, description, date, money: target.value, category})} \n\t\t\t\tvalue={money}/>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<button type=\"button\" className=\"btn btn-outline-success\" onClick={onSaveNewCharge}>&#10003;</button> \n\t\t\t\t<button type=\"button\" className=\"btn btn-outline-secondary\" onClick={onCancelNewCharge}>&#10008;</button>\n\t\t\t</td>\n\t\t</tr>\n\t);\n} \n\nexport default ChargeRow;","import React from 'react';\nimport {Row, Col} from 'react-bootstrap';\n\n\nfunction CurrentBalance() {\n\treturn (\n\t\t<Row >\n\t\t\t<Col md={{ span: 1, offset: 11 }}>Balance</Col>\n\t\t\t<Col md={{ span: 1, offset: 11 }}>1000$</Col>\n\t\t</Row>\n\t);\n} \n\nexport default CurrentBalance;\n","import React, { useState } from 'react';\nimport { Container, Row, Col, Table, Tabs, Tab }from 'react-bootstrap';\nimport ChargeRow from './ChargeRow';\nimport { v4 as uuidv4 } from 'uuid';\nimport CurrentBalance from './CurrentBalance';\nimport MomentLocaleUtils, {\n  formatDate,\n  parseDate,\n} from 'react-day-picker/moment';\nimport './Button.css'\n\nfunction CategoriesPage () {\n\tconst headers = ['Category', 'Description', 'Date', 'Money', 'Action'];\n\n\n\tconst storedCharges = JSON.parse(localStorage.getItem(\"charges\"));\n\n\tconst [charges, setCharges] = useState(storedCharges || []);\n\tconst [newCharge, setNewCharge] = useState(null);\n\tconst [editableChargeId, setEditableChargeId] = useState();\n\n  const handleAddNewCharge = () => {\n\t\tsetNewCharge({\n\t\t\tid: uuidv4(),\n\t\t\tcategory: '',\n\t\t\tdescription : '',\n\t\t\tdate: formatDate(new Date()),\n\t\t\tmoney: '$'\n\t\t})\n\t}; \n\n\tconst handleSaveNewCharge = () => {\n\t\tlocalStorage.setItem(\"charges\", JSON.stringify([...charges, newCharge]));\n\t\tsetCharges([...charges, newCharge]);\n\t\tsetNewCharge(null);\n\t\tsetEditableChargeId(null);\n\t}\n\n\tconst handleSaveEditableCharge = () => {\n\t\tconst updatedCharges = charges.map((charge) => {\n\t\t\tif(charge.id === newCharge.id){\n\t\t\t\treturn newCharge;\n\t\t\t}\n\t\t\treturn charge;\n\t\t})\n\n\t\tlocalStorage.setItem(\"charges\", JSON.stringify(updatedCharges));\n\n\t\tsetCharges(updatedCharges);\n\t\tsetNewCharge(null);\n\t\tsetEditableChargeId(null);\n\t}\n\n\tconst handleCancelNewCharge = () => {\n\t\tsetNewCharge(null);\n\t\tsetEditableChargeId(null);\n\t}\n\n\tconst handleChargeChange = (charge) => {\n\t\tsetNewCharge(charge);\n\t}\n\n\tconst handleEditCharge = (charge) => {\n\t\tsetEditableChargeId(charge.id);\n\t\tsetNewCharge(charge);\n\t}\n\n\tconst handleDeleteCharge = (id) => {\n\t\tconst arrayCharges = charges.filter((charge) => charge.id !== id);\n\n\t\tlocalStorage.setItem(\"charges\", JSON.stringify(arrayCharges));\n\n\t\tsetCharges([...arrayCharges]);\n\t}\n\n\tconst buildChargeRow = (charge) => {\n\t\treturn (\n\t\t\t<tr key={charge.id}>\n\t\t\t\t<td>{charge.category}</td>\n\t\t\t\t<td>{charge.description}</td>\n\t\t\t\t<td>{charge.date}</td>\n\t\t\t\t<td>{charge.money}</td>\n\t\t\t\t<td>\t\t\t\t\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-outline-primary\" onClick={() => handleEditCharge(charge)}>Edit</button>\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-outline-danger\" onClick={() => handleDeleteCharge(charge.id)}>Delete</button>\n\t\t\t\t</td>\n\t\t\t</tr>)\n\t}\n\n\treturn (\n\t\t<Container className=\"p-5 page\">\n\t\t\t{/* <CurrentBalance /> */}\n\n\t\t<nav className=\"nav-wrapper\">\n\t\t\t<CurrentBalance />\n\t\t</nav>\n\n\t\t<div className=\"categories-page\">\n\t\t<Tabs defaultActiveKey=\"charges\" id=\"uncontrolled-tab-example\" className=\"mb-5\">\n\t\t\t<Tab eventKey=\"charges\" title=\"Charges\">\n\t\t\t\t<div className=\"d-flex justify-content-end\">\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={handleAddNewCharge}>Add new</button>\n\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"pt-3\">\n\t\t\t\t\n\t\t\t\t\t<Table striped bordered hover>   \n\t\t\t\t<thead>\n\t\t\t<tr> \n\t\t\t\t{headers.map((header) => <th>{header}</th>)}\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody>\n\t\t\t\t{charges.map((charge) => {\n\t\t\t\t\tif (editableChargeId === charge.id){\n\t\t\t\t\t\treturn (<ChargeRow key={charge.id} {...newCharge} \n\t\t\t\t\t\t\t\tonChargeChange={handleChargeChange} \n\t\t\t\t\t\t\t\tonSaveNewCharge={handleSaveEditableCharge} \n\t\t\t\t\t\t\t\tonCancelNewCharge={handleCancelNewCharge} \n\t\t\t\t\t\t\t\t\t\t/>)\n\t\t\t\t\t} else{\n\t\t\t\t\t\treturn buildChargeRow(charge);\n\t\t\t\t\t\t}\n\t\t\t\t})}\n\t\t\t\t{newCharge && !editableChargeId &&\n\t\t\t\t\t\t\t\t\t(<ChargeRow key={newCharge.id} {...newCharge}\n\t\t\t\t\t\t\t\t\tonChargeChange={handleChargeChange}\n\t\t\t\t\t\t\t\t\tonSaveNewCharge={handleSaveNewCharge}\n\t\t\t\t\t\t\t\t\tonCancelNewCharge={handleCancelNewCharge}\n\t\t\t\t\t\t\t\t\t/>)}\n\t\t</tbody>\n    </Table>\n\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t</Tab>\n\t\t\t<Tab eventKey=\"incomes\" title=\"Incomes\">\n\t\t\t\t<h2>Any content 2</h2>\n\t\t\t</Tab>\n\t\t</Tabs>\n\t\t</div>\n\t\t</Container>\n\t);\n}\n\nexport default CategoriesPage;\n","import logo from './logo.svg';\nimport './App.css';\nimport CategoriesPage from './categories/CategoriesPage';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <CategoriesPage />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}