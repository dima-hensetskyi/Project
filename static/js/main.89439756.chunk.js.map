{"version":3,"sources":["components/CurrentBalance/CurrentBalance.jsx","components/Charts/Charts.js","components/Categories/Categories.js","components/img/icons/png-icons/png/056-plus.png","components/img/icons/png-icons/png/058-error.png","components/img/icons/png-icons/png/218-edit.png","components/img/icons/png-icons/png/059-success.png","components/img/icons/png-icons/png/057-minus.png","components/Charges/Icon.jsx","components/Charges/ChargeRow.jsx","components/Charges/TableCharges.jsx","components/Incomes/TableIncomes.js","components/Tables/Tables.js","App.js","reportWebVitals.js","index.js"],"names":["CurrentBalance","className","Charts","Categories","Icon","iconName","size","onClick","src","AddIcon","DeleteIcon","EditIcon","SaveIcon","CancelIcon","getUrlByName","alt","categoriesOptions","value","label","ChargeRow","id","category","description","date","money","onChargeChange","onSaveNewCharge","onCancelNewCharge","onChange","selectedOption","options","Form","Control","type","placeholder","target","formatDate","parseDate","onDayChange","day","TableCharges","storedCharges","JSON","parse","localStorage","getItem","useState","charges","setCharges","newCharge","setNewCharge","editableChargeId","setEditableChargeId","sort","setSort","sortField","setSortField","handleSaveEditableCharge","updatedCharges","map","charge","setItem","stringify","handleCancelNewCharge","handleChargeChange","buildChargeRow","handleEditCharge","arrayCharges","filter","handleDeleteCharge","onSort","cloneData","item","moneyFormat","—ÅorrectDateFormat","Date","replace","Number","sortType","correctData","_","orderBy","toLowerCase","correctDateFormat","getMonth","correctMounth","getDate","correctDay","getFullYear","uuidv4","Table","striped","bordered","hover","header","index","bind","TableIncomes","Tables","Tabs","defaultActiveKey","Tab","eventKey","title","App","to","activeClassName","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89439756.chunk.js","sourcesContent":["import React from 'react';\r\nimport './CurrentBalance.css';\r\n\r\nfunction CurrentBalance() {\r\n    return (\r\n        <div className=\"balance-block\">\r\n            <div className=\"balance-text-sum\">$100000</div>\r\n            <div className=\"balance-text\">Current Balance</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CurrentBalance;\r\n","import React from 'react';\r\nimport './Charts.css';\r\n\r\nfunction Charts() {\r\n    return (\r\n        <div className=\"charts-page\">\r\n            <h1>Charts</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Charts;\r\n","import React from 'react';\r\n\r\nfunction Categories() {\r\n    return (\r\n        <div className=\"categories-page\">\r\n            <h1>Categories</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Categories;\r\n","export default __webpack_public_path__ + \"static/media/056-plus.a0162b51.png\";","export default __webpack_public_path__ + \"static/media/058-error.7568cf92.png\";","export default __webpack_public_path__ + \"static/media/218-edit.3ae610dc.png\";","export default __webpack_public_path__ + \"static/media/059-success.6776e7db.png\";","export default __webpack_public_path__ + \"static/media/057-minus.f7328416.png\";","import React from 'react';\r\nimport AddIcon from '../img/icons/png-icons/png/056-plus.png';\r\nimport DeleteIcon from '../img/icons/png-icons/png/058-error.png';\r\nimport EditIcon from '../img/icons/png-icons/png/218-edit.png';\r\nimport SaveIcon from '../img/icons/png-icons/png/059-success.png';\r\nimport CancelIcon from '../img/icons/png-icons/png/057-minus.png';\r\nimport './Icon.css';\r\n\r\nfunction Icon({ iconName, size = 'small', onClick }) {\r\n    function getUrlByName(iconName) {\r\n        switch (iconName) {\r\n            case 'add':\r\n                return AddIcon;\r\n            case 'delete':\r\n                return DeleteIcon;\r\n            case 'edit':\r\n                return EditIcon;\r\n            case 'save':\r\n                return SaveIcon;\r\n            case 'cancel':\r\n                return CancelIcon;\r\n        }\r\n    }\r\n    return (\r\n        <div className={`icon-button-${size}`} onClick={onClick}>\r\n            <img src={getUrlByName(iconName)} alt={`${iconName} icon button`} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Icon;\r\n","import React from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport Select from 'react-select';\r\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\r\nimport 'react-day-picker/lib/style.css';\r\nimport MomentLocaleUtils, { formatDate, parseDate } from 'react-day-picker/moment';\r\nimport './ChargeRow.css';\r\nimport Icon from './Icon';\r\n\r\nconst categoriesOptions = [\r\n    { value: 'food', label: 'Food' },\r\n    { value: 'clothes', label: 'Clothes' },\r\n    { value: 'restaurant', label: 'Restaurant' },\r\n    { value: 'utility bills', label: 'Utility bills' },\r\n    { value: 'pets', label: 'Pets' },\r\n];\r\n\r\nfunction ChargeRow({\r\n    id,\r\n    category,\r\n    description,\r\n    date,\r\n    money,\r\n    onChargeChange,\r\n    onSaveNewCharge,\r\n    onCancelNewCharge,\r\n}) {\r\n    return (\r\n        <tr className=\"charge-row\">\r\n            <td>\r\n                <Select\r\n                    value={{ value: category, label: category }}\r\n                    onChange={(selectedOption) =>\r\n                        onChargeChange({\r\n                            id,\r\n                            description,\r\n                            date,\r\n                            money,\r\n                            category: selectedOption.value,\r\n                        })\r\n                    }\r\n                    options={categoriesOptions}\r\n                />\r\n            </td>\r\n            <td>\r\n                <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Description\"\r\n                    onChange={({ target }) =>\r\n                        onChargeChange({ id, description: target.value, date, money, category })\r\n                    }\r\n                    value={description}\r\n                />\r\n            </td>\r\n            <td>\r\n                <DayPickerInput\r\n                    formatDate={formatDate}\r\n                    parseDate={parseDate}\r\n                    value={formatDate(date)}\r\n                    onDayChange={(day) =>\r\n                        onChargeChange({ id, description, date: formatDate(day), money, category })\r\n                    }\r\n                />\r\n            </td>\r\n            <td>\r\n                <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Money\"\r\n                    onChange={({ target }) =>\r\n                        onChargeChange({ id, description, date, money: target.value, category })\r\n                    }\r\n                    value={money}\r\n                />\r\n            </td>\r\n            <td>\r\n                <div className=\"action-buttons\">\r\n                    <Icon iconName=\"save\" onClick={onSaveNewCharge} />\r\n                    <Icon iconName=\"cancel\" onClick={onCancelNewCharge} />\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default ChargeRow;\r\n","import React, { useState } from 'react';\r\n\r\nimport { Table } from 'react-bootstrap';\r\n\r\nimport MomentLocaleUtils, { formatDate, parseDate } from 'react-day-picker/moment';\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport ChargeRow from './ChargeRow';\r\nimport './TableCharges.css';\r\nimport Icon from './Icon';\r\nimport { propTypes } from 'react-bootstrap/esm/Image';\r\nimport _ from 'lodash';\r\n\r\nfunction TableCharges() {\r\n    const storedCharges = JSON.parse(localStorage.getItem('charges'));\r\n\r\n    const [charges, setCharges] = useState(storedCharges || []);\r\n    const [newCharge, setNewCharge] = useState(null);\r\n    const [editableChargeId, setEditableChargeId] = useState();\r\n    const [sort, setSort] = useState('desc');\r\n    const [sortField, setSortField] = useState('id');\r\n\r\n    const headers = ['Category', 'Description', 'Date', 'Money', 'Action'];\r\n\r\n    const handleAddNewCharge = () => {\r\n        setNewCharge({\r\n            id: uuidv4(),\r\n            category: '',\r\n            description: '',\r\n            date: formatDate(new Date()),\r\n            money: '',\r\n        });\r\n    };\r\n\r\n    const handleSaveNewCharge = () => {\r\n        localStorage.setItem('charges', JSON.stringify([...charges, newCharge]));\r\n        setCharges([...charges, newCharge]);\r\n        setNewCharge(null);\r\n        setEditableChargeId(null);\r\n    };\r\n\r\n    const handleSaveEditableCharge = () => {\r\n        const updatedCharges = charges.map((charge) => {\r\n            if (charge.id === newCharge.id) {\r\n                return newCharge;\r\n            }\r\n            return charge;\r\n        });\r\n\r\n        localStorage.setItem('charges', JSON.stringify(updatedCharges));\r\n\r\n        setCharges(updatedCharges);\r\n        setNewCharge(null);\r\n        setEditableChargeId(null);\r\n    };\r\n\r\n    const handleCancelNewCharge = () => {\r\n        setNewCharge(null);\r\n        setEditableChargeId(null);\r\n    };\r\n\r\n    const handleChargeChange = (charge) => {\r\n        setNewCharge(charge);\r\n    };\r\n\r\n    const handleEditCharge = (charge) => {\r\n        setEditableChargeId(charge.id);\r\n        setNewCharge(charge);\r\n    };\r\n\r\n    const handleDeleteCharge = (id) => {\r\n        const arrayCharges = charges.filter((charge) => charge.id !== id);\r\n\r\n        localStorage.setItem('charges', JSON.stringify(arrayCharges));\r\n\r\n        setCharges([...arrayCharges]);\r\n    };\r\n\r\n    const buildChargeRow = (charge) => {\r\n        return (\r\n            <tr key={charge.id}>\r\n                <td>{charge.category}</td>\r\n                <td>{charge.description}</td>\r\n                <td>{charge.date}</td>\r\n                <td>{charge.money}</td>\r\n                <td>\r\n                    <div className=\"action-buttons\">\r\n                        <Icon iconName=\"edit\" onClick={() => handleEditCharge(charge)} />\r\n                        <Icon iconName=\"delete\" onClick={() => handleDeleteCharge(charge.id)} />\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    const onSort = (category) => {\r\n        const cloneData = charges.map((item) => {\r\n            if (typeof item.date === 'string' || typeof moneyFormat === 'string') {\r\n                const —ÅorrectDateFormat = Date.parse(item.date);\r\n                const moneyFormat = item.money.replace(/\\D/g, '');\r\n                return {\r\n                    ...item,\r\n                    money: Number(moneyFormat),\r\n                    date: —ÅorrectDateFormat,\r\n                };\r\n            }\r\n            return item;\r\n        });\r\n\r\n        const sortType = sort === `desc` ? `asc` : `desc`;\r\n        setSort(sortType);\r\n        setSortField(category);\r\n        const orderedData = _.orderBy(cloneData, category.toLowerCase(), sortType);\r\n\r\n        const correctData = orderedData.map((item) => {\r\n            const date = new Date(item.date);\r\n\r\n            const correctDay = (date) =>\r\n                date.getDate() <= 9 ? `0${date.getDate()}` : `${date.getDate()}`;\r\n            const correctMounth = (date) =>\r\n                date.getMonth() <= 8 ? `0${date.getMonth() + 1}` : `${date.getMonth() + 1}`;\r\n\r\n            const correctDateFormat = `${correctMounth(date)}/${correctDay(\r\n                date\r\n            )}/${date.getFullYear()}`;\r\n            return {\r\n                ...item,\r\n                money: item.money + '$',\r\n                date: correctDateFormat,\r\n            };\r\n        });\r\n        setCharges(correctData);\r\n    };\r\n    return (\r\n        <div className=\"charge-table\">\r\n            <div className=\"d-flex justify-content-end pb-3\">\r\n                <Icon iconName=\"add\" size=\"big\" onClick={handleAddNewCharge} />\r\n            </div>\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        {headers.map((header, index) => (\r\n                            <th\r\n                                key={index}\r\n                                onClick={onSort.bind(null, `${header}`)}\r\n                                className={sortField === header ? 'sort' : 'notSorting'}\r\n                            >\r\n                                {header}\r\n                            </th>\r\n                        ))}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {charges.map((charge) => {\r\n                        if (editableChargeId === charge.id) {\r\n                            return (\r\n                                <ChargeRow\r\n                                    key={charge.id}\r\n                                    {...newCharge}\r\n                                    onChargeChange={handleChargeChange}\r\n                                    onSaveNewCharge={handleSaveEditableCharge}\r\n                                    onCancelNewCharge={handleCancelNewCharge}\r\n                                />\r\n                            );\r\n                        } else {\r\n                            return buildChargeRow(charge);\r\n                        }\r\n                    })}\r\n                    {newCharge && !editableChargeId && (\r\n                        <ChargeRow\r\n                            key={newCharge.id}\r\n                            {...newCharge}\r\n                            onChargeChange={handleChargeChange}\r\n                            onSaveNewCharge={handleSaveNewCharge}\r\n                            onCancelNewCharge={handleCancelNewCharge}\r\n                        />\r\n                    )}\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TableCharges;\r\n","import React from 'react';\r\n\r\nfunction TableIncomes() {\r\n    return (\r\n        <div className=\"TableIncomes\">\r\n            <h2>Incomes table</h2>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TableIncomes;\r\n","import React from 'react';\r\nimport { Tabs, Tab } from 'react-bootstrap';\r\nimport TableCharges from '../Charges/TableCharges';\r\nimport TableIncomes from '../Incomes/TableIncomes';\r\nfunction Tables() {\r\n    return (\r\n        <div className=\"tables-page\">\r\n            <Tabs\r\n                defaultActiveKey=\"charges\"\r\n                id=\"uncontrolled-tab-example\"\r\n                className=\"mb-5\"\r\n            >\r\n                <Tab eventKey=\"charges\" title=\"Charges\">\r\n                    <TableCharges />\r\n                </Tab>\r\n                <Tab eventKey=\"incomes\" title=\"Incomes\">\r\n                    <TableIncomes />\r\n                </Tab>\r\n            </Tabs>\r\n        </div>\r\n    );\r\n}\r\nexport default Tables;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Link,\r\n    NavLink,\r\n    Route,\r\n    Switch,\r\n} from 'react-router-dom';\r\nimport CurrentBalance from './components/CurrentBalance/CurrentBalance';\r\nimport Charts from './components/Charts/Charts';\r\nimport Categories from './components/Categories/Categories';\r\nimport Tables from './components/Tables/Tables';\r\n\r\nfunction App() {\r\n    return (\r\n        <Router>\r\n            <div className=\"app\">\r\n                <div className=\"navigation-wrapper\">\r\n                    <CurrentBalance />\r\n                    <div className=\"link-list\">\r\n                        <NavLink\r\n                            to=\"/home\"\r\n                            className=\"app-link\"\r\n                            activeClassName=\"active-link\"\r\n                        >\r\n                            Home\r\n                        </NavLink>\r\n                        <NavLink\r\n                            to=\"/charts\"\r\n                            className=\"app-link\"\r\n                            activeClassName=\"active-link\"\r\n                        >\r\n                            Charts\r\n                        </NavLink>\r\n                        <NavLink\r\n                            to=\"/categories\"\r\n                            className=\"app-link\"\r\n                            activeClassName=\"active-link\"\r\n                        >\r\n                            Categories\r\n                        </NavLink>\r\n                    </div>\r\n                </div>\r\n                <div className=\"page\">\r\n                    <Switch>\r\n                        <Route path=\"/charts\" component={Charts}></Route>\r\n                        <Route\r\n                            path=\"/categories\"\r\n                            component={Categories}\r\n                        ></Route>\r\n                        <Route path=\"/\" component={Tables}></Route>\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}