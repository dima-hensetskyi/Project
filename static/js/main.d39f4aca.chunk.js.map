{"version":3,"sources":["logo.svg","charges/CurrentBalance.jsx","img/icons/png-icons/png/056-plus.png","img/icons/png-icons/png/058-error.png","img/icons/png-icons/png/218-edit.png","img/icons/png-icons/png/059-success.png","img/icons/png-icons/png/057-minus.png","charges/Icon.jsx","charges/ChargeRow.jsx","charges/TableCharges.jsx","charges/ChargesPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["CurrentBalance","className","Icon","iconName","size","onClick","src","AddIcon","DeleteIcon","EditIcon","SaveIcon","CancelIcon","getUrlByName","alt","categoriesOptions","value","label","ChargeRow","id","category","description","date","money","onChargeChange","onSaveNewCharge","onCancelNewCharge","onChange","selectedOption","options","Form","Control","type","placeholder","target","formatDate","parseDate","onDayChange","day","TableCharges","storedCharges","JSON","parse","localStorage","getItem","useState","charges","setCharges","newCharge","setNewCharge","editableChargeId","setEditableChargeId","sort","setSort","sortField","setSortField","handleSaveEditableCharge","updatedCharges","map","charge","setItem","stringify","handleCancelNewCharge","handleChargeChange","buildChargeRow","handleEditCharge","arrayCharges","filter","handleDeleteCharge","onSort","cloneData","item","moneyFormat","—ÅorrectDateFormat","Date","replace","Number","sortType","correctData","_","orderBy","toLowerCase","correctDateFormat","getMonth","correctMounth","getDate","correctDay","getFullYear","uuidv4","Table","striped","bordered","hover","header","index","bind","ChargesPage","Tabs","defaultActiveKey","Tab","eventKey","title","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kTAAe,I,YCaAA,MATf,WACC,OACC,sBAAKC,UAAU,gBAAf,UACC,qBAAKA,UAAU,mBAAf,qBACA,qBAAKA,UAAU,eAAf,iC,wGCRY,G,YAAA,IAA0B,sCCA1B,MAA0B,sCCA1B,MAA0B,qCCA1B,MAA0B,wCCA1B,MAA0B,sC,MCyB1BC,MAjBf,YAAkD,IAAnCC,EAAkC,EAAlCA,SAAkC,IAAxBC,YAAwB,MAAnB,QAAmB,EAAVC,EAAU,EAAVA,QAUrC,OACE,qBAAKJ,UAAS,sBAAiBG,GAAQC,QAASA,EAAhD,SACD,qBAAKC,IAXP,SAAsBH,GACrB,OAAOA,GACN,IAAK,MAAO,OAAOI,EACnB,IAAK,SAAU,OAAOC,EACtB,IAAK,OAAQ,OAAOC,EACpB,IAAK,OAAQ,OAAOC,EACpB,IAAK,SAAU,OAAOC,GAKZC,CAAaT,GAAWU,IAAG,UAAKV,EAAL,qBCXlCW,EAAoB,CACtB,CAAEC,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,UAAWC,MAAO,WAC3B,CAAED,MAAO,aAAcC,MAAO,cAC9B,CAAED,MAAO,gBAAiBC,MAAO,iBACjC,CAAED,MAAO,OAAQC,MAAO,SAsEbC,MAnEf,YASI,IARAC,EAQD,EARCA,GACAC,EAOD,EAPCA,SACAC,EAMD,EANCA,YACAC,EAKD,EALCA,KACAC,EAID,EAJCA,MACAC,EAGD,EAHCA,eACAC,EAED,EAFCA,gBACAC,EACD,EADCA,kBAEA,OACI,qBAAIxB,UAAU,aAAd,UACI,6BACI,cAAC,IAAD,CACIc,MAAO,CAAEA,MAAOI,EAAUH,MAAOG,GACjCO,SAAU,SAACC,GAAD,OACNJ,EAAe,CACXL,KACAE,cACAC,OACAC,QACAH,SAAUQ,EAAeZ,SAGjCa,QAASd,MAGjB,6BACI,cAACe,EAAA,EAAKC,QAAN,CACIC,KAAK,OACLC,YAAY,cACZN,SAAU,gBAAGO,EAAH,EAAGA,OAAH,OACNV,EAAe,CAAEL,KAAIE,YAAaa,EAAOlB,MAAOM,OAAMC,QAAOH,cAEjEJ,MAAOK,MAGf,6BACI,cAAC,IAAD,CACIc,WAAYA,aACZC,UAAWA,YACXpB,MAAOmB,qBAAWb,GAClBe,YAAa,SAACC,GAAD,OACTd,EAAe,CAAEL,KAAIE,cAAaC,KAAMa,qBAAWG,GAAMf,QAAOH,kBAI5E,6BACI,cAACU,EAAA,EAAKC,QAAN,CACIC,KAAK,OACLC,YAAY,QACZN,SAAU,gBAAGO,EAAH,EAAGA,OAAH,OACNV,EAAe,CAAEL,KAAIE,cAAaC,OAAMC,MAAOW,EAAOlB,MAAOI,cAEjEJ,MAAOO,MAGf,6BACI,sBAAKrB,UAAU,iBAAf,UACI,cAAC,EAAD,CAAME,SAAS,OAAOE,QAASmB,IAC/B,cAAC,EAAD,CAAMrB,SAAS,SAASE,QAASoB,a,yBC2GtCa,MA1Kf,WACI,IAAMC,EAAgBC,KAAKC,MAAMC,aAAaC,QAAQ,YADlC,EAGUC,mBAASL,GAAiB,IAHpC,mBAGbM,EAHa,KAGJC,EAHI,OAIcF,mBAAS,MAJvB,mBAIbG,EAJa,KAIFC,EAJE,OAK4BJ,qBAL5B,mBAKbK,EALa,KAKKC,EALL,OAMIN,mBAAS,QANb,mBAMbO,EANa,KAMPC,EANO,OAOcR,mBAAS,MAPvB,mBAObS,EAPa,KAOFC,EAPE,KA4BdC,EAA2B,WAC7B,IAAMC,EAAiBX,EAAQY,KAAI,SAACC,GAChC,OAAIA,EAAOxC,KAAO6B,EAAU7B,GACjB6B,EAEJW,KAGXhB,aAAaiB,QAAQ,UAAWnB,KAAKoB,UAAUJ,IAE/CV,EAAWU,GACXR,EAAa,MACbE,EAAoB,OAGlBW,EAAwB,WAC1Bb,EAAa,MACbE,EAAoB,OAGlBY,EAAqB,SAACJ,GACxBV,EAAaU,IAgBXK,EAAiB,SAACL,GACpB,OACI,+BACI,6BAAKA,EAAOvC,WACZ,6BAAKuC,EAAOtC,cACZ,6BAAKsC,EAAOrC,OACZ,6BAAKqC,EAAOpC,QACZ,6BACI,sBAAKrB,UAAU,iBAAf,UACI,cAAC,EAAD,CAAME,SAAS,OAAOE,QAAS,kBAtB1B,SAACqD,GACtBR,EAAoBQ,EAAOxC,IAC3B8B,EAAaU,GAoBwCM,CAAiBN,MACtD,cAAC,EAAD,CAAMvD,SAAS,SAASE,QAAS,kBAlB1B,SAACa,GACxB,IAAM+C,EAAepB,EAAQqB,QAAO,SAACR,GAAD,OAAYA,EAAOxC,KAAOA,KAE9DwB,aAAaiB,QAAQ,UAAWnB,KAAKoB,UAAUK,IAE/CnB,EAAW,YAAImB,IAawCE,CAAmBT,EAAOxC,cARpEwC,EAAOxC,KAelBkD,EAAS,SAACjD,GACZ,IAAMkD,EAAYxB,EAAQY,KAAI,SAACa,GAC3B,GAAyB,kBAAdA,EAAKjD,MAA4C,kBAAhBkD,YAA0B,CAClE,IAAMC,EAAoBC,KAAKhC,MAAM6B,EAAKjD,MACpCkD,EAAcD,EAAKhD,MAAMoD,QAAQ,MAAO,IAC9C,OAAO,2BACAJ,GADP,IAEIhD,MAAOqD,OAAOJ,GACdlD,KAAMmD,IAGd,OAAOF,KAGLM,EAAe,SAAJzB,EAAA,aACjBC,EAAQwB,GACRtB,EAAanC,GACb,IAEM0D,EAFcC,IAAEC,QAAQV,EAAWlD,EAAS6D,cAAeJ,GAEjCnB,KAAI,SAACa,GACjC,IAAMjD,EAAO,IAAIoD,KAAKH,EAAKjD,MAOrB4D,EAAiB,UAHD,SAAC5D,GAAD,OAClBA,EAAK6D,YAAc,EAAnB,WAA2B7D,EAAK6D,WAAa,GAA7C,UAAsD7D,EAAK6D,WAAa,GAE/CC,CAAc9D,GAApB,YALJ,SAACA,GAAD,OACfA,EAAK+D,WAAa,EAAlB,WAA0B/D,EAAK+D,WAA/B,UAAgD/D,EAAK+D,WAILC,CAChDhE,GADmB,YAElBA,EAAKiE,eACV,OAAO,2BACAhB,GADP,IAEIhD,MAAOgD,EAAKhD,MAAQ,IACpBD,KAAM4D,OAGdnC,EAAW+B,IAEf,OACI,sBAAK5E,UAAU,eAAf,UACI,qBAAKA,UAAU,kCAAf,SACI,cAAC,EAAD,CAAME,SAAS,MAAMC,KAAK,MAAMC,QAhHjB,WACvB2C,EAAa,CACT9B,GAAIqE,cACJpE,SAAU,GACVC,YAAa,GACbC,KAAMa,qBAAW,IAAIuC,MACrBnD,MAAO,UA4GP,eAACkE,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACI,gCACI,6BAtHA,CAAC,WAAY,cAAe,OAAQ,QAAS,UAuHhClC,KAAI,SAACmC,EAAQC,GAAT,OACT,oBAEIxF,QAAS+D,EAAO0B,KAAK,KAAZ,UAAqBF,IAC9B3F,UAAWoD,IAAcuC,EAAS,OAAS,aAH/C,SAKKA,GAJIC,UASrB,kCACKhD,EAAQY,KAAI,SAACC,GACV,OAAIT,IAAqBS,EAAOxC,GAExB,cAAC,EAAD,2BAEQ6B,GAFR,IAGIxB,eAAgBuC,EAChBtC,gBAAiB+B,EACjB9B,kBAAmBoC,IAJdH,EAAOxC,IAQb6C,EAAeL,MAG7BX,IAAcE,GACX,cAAC,EAAD,2BAEQF,GAFR,IAGIxB,eAAgBuC,EAChBtC,gBA3II,WACxBkB,aAAaiB,QAAQ,UAAWnB,KAAKoB,UAAL,sBAAmBf,GAAnB,CAA4BE,MAC5DD,EAAW,GAAD,mBAAKD,GAAL,CAAcE,KACxBC,EAAa,MACbE,EAAoB,OAwIAzB,kBAAmBoC,IAJdd,EAAU7B,cChJ5B6E,MApBf,WACI,OACI,sBAAK9F,UAAU,OAAf,UACI,qBAAKA,UAAU,qBAAf,SACI,cAAC,EAAD,MAEJ,qBAAKA,UAAU,eAAf,SACI,eAAC+F,EAAA,EAAD,CAAMC,iBAAiB,UAAU/E,GAAG,2BAA2BjB,UAAU,OAAzE,UACI,cAACiG,EAAA,EAAD,CAAKC,SAAS,UAAUC,MAAM,UAA9B,SACI,cAAC,EAAD,MAEJ,cAACF,EAAA,EAAD,CAAKC,SAAS,UAAUC,MAAM,UAA9B,SACI,0D,MCRTC,MANf,WACE,OACE,cAAC,EAAD,KCKWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d39f4aca.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport './CurrentBalance.css';\n\n\nfunction CurrentBalance() {\n\treturn (\n\t\t<div className=\"balance-block\">\n\t\t\t<div className=\"balance-text-sum\">$100000</div>\n\t\t\t<div className=\"balance-text\">Current Balance</div>\n\t\t</div>\n\t);\n} \n\nexport default CurrentBalance;\n","export default __webpack_public_path__ + \"static/media/056-plus.a0162b51.png\";","export default __webpack_public_path__ + \"static/media/058-error.7568cf92.png\";","export default __webpack_public_path__ + \"static/media/218-edit.3ae610dc.png\";","export default __webpack_public_path__ + \"static/media/059-success.6776e7db.png\";","export default __webpack_public_path__ + \"static/media/057-minus.f7328416.png\";","import React from 'react';\nimport AddIcon from '../img/icons/png-icons/png/056-plus.png';\nimport DeleteIcon from '../img/icons/png-icons/png/058-error.png';\nimport EditIcon from '../img/icons/png-icons/png/218-edit.png';\nimport SaveIcon from '../img/icons/png-icons/png/059-success.png';\nimport CancelIcon from '../img/icons/png-icons/png/057-minus.png';\nimport './Icon.css'\n\nfunction Icon({iconName, size=\"small\", onClick}) {\n\tfunction getUrlByName(iconName) {\n\t\tswitch(iconName){\n\t\t\tcase \"add\": return AddIcon;\n\t\t\tcase \"delete\": return DeleteIcon;\n\t\t\tcase \"edit\": return EditIcon;\n\t\t\tcase \"save\": return SaveIcon;\n\t\t\tcase \"cancel\": return CancelIcon; \n\t\t}\n\t}\n  return (\n    <div className={`icon-button-${size}`} onClick={onClick}>\n\t\t\t<img src={getUrlByName(iconName)} alt={`${iconName} icon button`}/>\n\t\t</div>\n    );\n}\n\nexport default Icon;","import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport Select from 'react-select';\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\nimport 'react-day-picker/lib/style.css';\nimport MomentLocaleUtils, { formatDate, parseDate } from 'react-day-picker/moment';\nimport './ChargeRow.css';\nimport Icon from './Icon';\n\nconst categoriesOptions = [\n    { value: 'food', label: 'Food' },\n    { value: 'clothes', label: 'Clothes' },\n    { value: 'restaurant', label: 'Restaurant' },\n    { value: 'utility bills', label: 'Utility bills' },\n    { value: 'pets', label: 'Pets' },\n];\n\nfunction ChargeRow({\n    id,\n    category,\n    description,\n    date,\n    money,\n    onChargeChange,\n    onSaveNewCharge,\n    onCancelNewCharge,\n}) {\n    return (\n        <tr className=\"charge-row\">\n            <td>\n                <Select\n                    value={{ value: category, label: category }}\n                    onChange={(selectedOption) =>\n                        onChargeChange({\n                            id,\n                            description,\n                            date,\n                            money,\n                            category: selectedOption.value,\n                        })\n                    }\n                    options={categoriesOptions}\n                />\n            </td>\n            <td>\n                <Form.Control\n                    type=\"text\"\n                    placeholder=\"Description\"\n                    onChange={({ target }) =>\n                        onChargeChange({ id, description: target.value, date, money, category })\n                    }\n                    value={description}\n                />\n            </td>\n            <td>\n                <DayPickerInput\n                    formatDate={formatDate}\n                    parseDate={parseDate}\n                    value={formatDate(date)}\n                    onDayChange={(day) =>\n                        onChargeChange({ id, description, date: formatDate(day), money, category })\n                    }\n                />\n            </td>\n            <td>\n                <Form.Control\n                    type=\"text\"\n                    placeholder=\"Money\"\n                    onChange={({ target }) =>\n                        onChargeChange({ id, description, date, money: target.value, category })\n                    }\n                    value={money}\n                />\n            </td>\n            <td>\n                <div className=\"action-buttons\">\n                    <Icon iconName=\"save\" onClick={onSaveNewCharge} />\n                    <Icon iconName=\"cancel\" onClick={onCancelNewCharge} />\n                </div>\n            </td>\n        </tr>\n    );\n}\n\nexport default ChargeRow;\n","import React, { useState } from 'react';\n\nimport { Table } from 'react-bootstrap';\n\nimport MomentLocaleUtils, { formatDate, parseDate } from 'react-day-picker/moment';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nimport ChargeRow from './ChargeRow';\nimport './TableCharges.css';\nimport Icon from './Icon';\nimport { propTypes } from 'react-bootstrap/esm/Image';\nimport _ from 'lodash';\n\nfunction TableCharges() {\n    const storedCharges = JSON.parse(localStorage.getItem('charges'));\n\n    const [charges, setCharges] = useState(storedCharges || []);\n    const [newCharge, setNewCharge] = useState(null);\n    const [editableChargeId, setEditableChargeId] = useState();\n    const [sort, setSort] = useState('desc');\n    const [sortField, setSortField] = useState('id');\n\n    const headers = ['Category', 'Description', 'Date', 'Money', 'Action'];\n\n    const handleAddNewCharge = () => {\n        setNewCharge({\n            id: uuidv4(),\n            category: '',\n            description: '',\n            date: formatDate(new Date()),\n            money: '',\n        });\n    };\n\n    const handleSaveNewCharge = () => {\n        localStorage.setItem('charges', JSON.stringify([...charges, newCharge]));\n        setCharges([...charges, newCharge]);\n        setNewCharge(null);\n        setEditableChargeId(null);\n    };\n\n    const handleSaveEditableCharge = () => {\n        const updatedCharges = charges.map((charge) => {\n            if (charge.id === newCharge.id) {\n                return newCharge;\n            }\n            return charge;\n        });\n\n        localStorage.setItem('charges', JSON.stringify(updatedCharges));\n\n        setCharges(updatedCharges);\n        setNewCharge(null);\n        setEditableChargeId(null);\n    };\n\n    const handleCancelNewCharge = () => {\n        setNewCharge(null);\n        setEditableChargeId(null);\n    };\n\n    const handleChargeChange = (charge) => {\n        setNewCharge(charge);\n    };\n\n    const handleEditCharge = (charge) => {\n        setEditableChargeId(charge.id);\n        setNewCharge(charge);\n    };\n\n    const handleDeleteCharge = (id) => {\n        const arrayCharges = charges.filter((charge) => charge.id !== id);\n\n        localStorage.setItem('charges', JSON.stringify(arrayCharges));\n\n        setCharges([...arrayCharges]);\n    };\n\n    const buildChargeRow = (charge) => {\n        return (\n            <tr key={charge.id}>\n                <td>{charge.category}</td>\n                <td>{charge.description}</td>\n                <td>{charge.date}</td>\n                <td>{charge.money}</td>\n                <td>\n                    <div className=\"action-buttons\">\n                        <Icon iconName=\"edit\" onClick={() => handleEditCharge(charge)} />\n                        <Icon iconName=\"delete\" onClick={() => handleDeleteCharge(charge.id)} />\n                    </div>\n                </td>\n            </tr>\n        );\n    };\n\n    const onSort = (category) => {\n        const cloneData = charges.map((item) => {\n            if (typeof item.date === 'string' || typeof moneyFormat === 'string') {\n                const —ÅorrectDateFormat = Date.parse(item.date);\n                const moneyFormat = item.money.replace(/\\D/g, '');\n                return {\n                    ...item,\n                    money: Number(moneyFormat),\n                    date: —ÅorrectDateFormat,\n                };\n            }\n            return item;\n        });\n\n        const sortType = sort === `desc` ? `asc` : `desc`;\n        setSort(sortType);\n        setSortField(category);\n        const orderedData = _.orderBy(cloneData, category.toLowerCase(), sortType);\n\n        const correctData = orderedData.map((item) => {\n            const date = new Date(item.date);\n\n            const correctDay = (date) =>\n                date.getDate() <= 9 ? `0${date.getDate()}` : `${date.getDate()}`;\n            const correctMounth = (date) =>\n                date.getMonth() <= 8 ? `0${date.getMonth() + 1}` : `${date.getMonth() + 1}`;\n\n            const correctDateFormat = `${correctMounth(date)}/${correctDay(\n                date\n            )}/${date.getFullYear()}`;\n            return {\n                ...item,\n                money: item.money + '$',\n                date: correctDateFormat,\n            };\n        });\n        setCharges(correctData);\n    };\n    return (\n        <div className=\"charge-table\">\n            <div className=\"d-flex justify-content-end pb-3\">\n                <Icon iconName=\"add\" size=\"big\" onClick={handleAddNewCharge} />\n            </div>\n            <Table striped bordered hover>\n                <thead>\n                    <tr>\n                        {headers.map((header, index) => (\n                            <th\n                                key={index}\n                                onClick={onSort.bind(null, `${header}`)}\n                                className={sortField === header ? 'sort' : 'notSorting'}\n                            >\n                                {header}\n                            </th>\n                        ))}\n                    </tr>\n                </thead>\n                <tbody>\n                    {charges.map((charge) => {\n                        if (editableChargeId === charge.id) {\n                            return (\n                                <ChargeRow\n                                    key={charge.id}\n                                    {...newCharge}\n                                    onChargeChange={handleChargeChange}\n                                    onSaveNewCharge={handleSaveEditableCharge}\n                                    onCancelNewCharge={handleCancelNewCharge}\n                                />\n                            );\n                        } else {\n                            return buildChargeRow(charge);\n                        }\n                    })}\n                    {newCharge && !editableChargeId && (\n                        <ChargeRow\n                            key={newCharge.id}\n                            {...newCharge}\n                            onChargeChange={handleChargeChange}\n                            onSaveNewCharge={handleSaveNewCharge}\n                            onCancelNewCharge={handleCancelNewCharge}\n                        />\n                    )}\n                </tbody>\n            </Table>\n        </div>\n    );\n}\n\nexport default TableCharges;\n","import React from 'react';\nimport CurrentBalance from './CurrentBalance';\nimport { Tabs, Tab } from 'react-bootstrap';\n\nimport './ChargesPage.css';\nimport TableCharges from './TableCharges';\n\nfunction ChargesPage() {\n    return (\n        <div className=\"page\">\n            <nav className=\"navigation-wrapper\">\n                <CurrentBalance />\n            </nav>\n            <div className=\"charges-page\">\n                <Tabs defaultActiveKey=\"charges\" id=\"uncontrolled-tab-example\" className=\"mb-5\">\n                    <Tab eventKey=\"charges\" title=\"Charges\">\n                        <TableCharges />\n                    </Tab>\n                    <Tab eventKey=\"incomes\" title=\"Incomes\">\n                        <h2>Any content 2</h2>\n                    </Tab>\n                </Tabs>\n            </div>\n        </div>\n    );\n}\n\nexport default ChargesPage;\n","import logo from './logo.svg';\nimport './App.css';\nimport ChargesPages from './charges/ChargesPage';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <ChargesPages />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}