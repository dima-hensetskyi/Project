{"version":3,"sources":["logo.svg","charges/CurrentBalance.jsx","img/icons/png-icons/png/056-plus.png","img/icons/png-icons/png/058-error.png","img/icons/png-icons/png/218-edit.png","img/icons/png-icons/png/059-success.png","img/icons/png-icons/png/057-minus.png","charges/Icon.jsx","charges/ChargeRow.jsx","charges/TableCharges.jsx","charges/ChargesPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["CurrentBalance","className","Icon","iconName","size","onClick","src","AddIcon","DeleteIcon","EditIcon","SaveIcon","CancelIcon","getUrlByName","alt","categoriesOptions","value","label","ChargeRow","id","category","description","date","money","onChargeChange","onSaveNewCharge","onCancelNewCharge","onChange","selectedOption","Form","Control","type","placeholder","target","formatDate","parseDate","onDayChange","day","TableCharges","storedCharges","JSON","parse","localStorage","getItem","useState","charges","setCharges","newCharge","setNewCharge","editableChargeId","setEditableChargeId","sort","setSort","sortField","setSortField","handleSaveEditableCharge","updatedCharges","map","charge","setItem","stringify","handleCancelNewCharge","handleChargeChange","buildChargeRow","handleEditCharge","arrayCharges","filter","handleDeleteCharge","onSort","cloneData","item","moneyFormat","—ÅorrectDateFormat","Date","replace","Number","sortType","correctData","_","orderBy","toLowerCase","correctDateFormat","getMonth","correctMounth","getDate","correctDay","getFullYear","uuidv4","Table","striped","bordered","hover","header","index","bind","ChargesPage","Tabs","defaultActiveKey","Tab","eventKey","title","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1799528e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport './CurrentBalance.css';\r\n\r\n\r\nfunction CurrentBalance() {\r\n\treturn (\r\n\t\t<div className=\"balance-block\">\r\n\t\t\t<div className=\"balance-text-sum\">$100000</div>\r\n\t\t\t<div className=\"balance-text\">Current Balance</div>\r\n\t\t</div>\r\n\t);\r\n} \r\n\r\nexport default CurrentBalance;\r\n","export default __webpack_public_path__ + \"static/media/056-plus.a0162b51.png\";","export default __webpack_public_path__ + \"static/media/058-error.7568cf92.png\";","export default __webpack_public_path__ + \"static/media/218-edit.3ae610dc.png\";","export default __webpack_public_path__ + \"static/media/059-success.6776e7db.png\";","export default __webpack_public_path__ + \"static/media/057-minus.f7328416.png\";","import React from 'react';\r\nimport AddIcon from '../img/icons/png-icons/png/056-plus.png';\r\nimport DeleteIcon from '../img/icons/png-icons/png/058-error.png';\r\nimport EditIcon from '../img/icons/png-icons/png/218-edit.png';\r\nimport SaveIcon from '../img/icons/png-icons/png/059-success.png';\r\nimport CancelIcon from '../img/icons/png-icons/png/057-minus.png';\r\nimport './Icon.css'\r\n\r\nfunction Icon({iconName, size=\"small\", onClick}) {\r\n\tfunction getUrlByName(iconName) {\r\n\t\tswitch(iconName){\r\n\t\t\tcase \"add\": return AddIcon;\r\n\t\t\tcase \"delete\": return DeleteIcon;\r\n\t\t\tcase \"edit\": return EditIcon;\r\n\t\t\tcase \"save\": return SaveIcon;\r\n\t\t\tcase \"cancel\": return CancelIcon; \r\n\t\t}\r\n\t}\r\n  return (\r\n    <div className={`icon-button-${size}`} onClick={onClick}>\r\n\t\t\t<img src={getUrlByName(iconName)} alt={`${iconName} icon button`}/>\r\n\t\t</div>\r\n    );\r\n}\r\n\r\nexport default Icon;","import React from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport Select from 'react-select';\r\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\r\nimport 'react-day-picker/lib/style.css';\r\nimport MomentLocaleUtils, { formatDate, parseDate } from 'react-day-picker/moment';\r\nimport './ChargeRow.css';\r\nimport Icon from './Icon';\r\n\r\nconst categoriesOptions = [\r\n    { value: 'food', label: 'Food' },\r\n    { value: 'clothes', label: 'Clothes' },\r\n    { value: 'restaurant', label: 'Restaurant' },\r\n    { value: 'utility bills', label: 'Utility bills' },\r\n    { value: 'pets', label: 'Pets' },\r\n];\r\n\r\nfunction ChargeRow({\r\n    id,\r\n    category,\r\n    description,\r\n    date,\r\n    money,\r\n    onChargeChange,\r\n    onSaveNewCharge,\r\n    onCancelNewCharge,\r\n}) {\r\n    return (\r\n        <tr className=\"charge-row\">\r\n            <td>\r\n                <Select\r\n                    value={{ value: category, label: category }}\r\n                    onChange={(selectedOption) =>\r\n                        onChargeChange({\r\n                            id,\r\n                            description,\r\n                            date,\r\n                            money,\r\n                            category: selectedOption.value,\r\n                        })\r\n                    }\r\n                    categoriesOptions={categoriesOptions}\r\n                />\r\n            </td>\r\n            <td>\r\n                <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Description\"\r\n                    onChange={({ target }) =>\r\n                        onChargeChange({ id, description: target.value, date, money, category })\r\n                    }\r\n                    value={description}\r\n                />\r\n            </td>\r\n            <td>\r\n                <DayPickerInput\r\n                    formatDate={formatDate}\r\n                    parseDate={parseDate}\r\n                    value={formatDate(date)}\r\n                    onDayChange={(day) =>\r\n                        onChargeChange({ id, description, date: formatDate(day), money, category })\r\n                    }\r\n                />\r\n            </td>\r\n            <td>\r\n                <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Money\"\r\n                    onChange={({ target }) =>\r\n                        onChargeChange({ id, description, date, money: target.value, category })\r\n                    }\r\n                    value={money}\r\n                />\r\n            </td>\r\n            <td>\r\n                <div className=\"action-buttons\">\r\n                    <Icon iconName=\"save\" onClick={onSaveNewCharge} />\r\n                    <Icon iconName=\"cancel\" onClick={onCancelNewCharge} />\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default ChargeRow;\r\n","import React, { useState } from 'react';\r\n\r\nimport { Table } from 'react-bootstrap';\r\n\r\nimport MomentLocaleUtils, { formatDate, parseDate } from 'react-day-picker/moment';\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport ChargeRow from './ChargeRow';\r\nimport './TableCharges.css';\r\nimport Icon from './Icon';\r\nimport { propTypes } from 'react-bootstrap/esm/Image';\r\nimport _ from 'lodash';\r\n\r\nfunction TableCharges() {\r\n    const storedCharges = JSON.parse(localStorage.getItem('charges'));\r\n\r\n    const [charges, setCharges] = useState(storedCharges || []);\r\n    const [newCharge, setNewCharge] = useState(null);\r\n    const [editableChargeId, setEditableChargeId] = useState();\r\n    const [sort, setSort] = useState('desc');\r\n    const [sortField, setSortField] = useState('id');\r\n\r\n    const headers = ['Category', 'Description', 'Date', 'Money', 'Action'];\r\n\r\n    const handleAddNewCharge = () => {\r\n        setNewCharge({\r\n            id: uuidv4(),\r\n            category: '',\r\n            description: '',\r\n            date: formatDate(new Date()),\r\n            money: '',\r\n        });\r\n    };\r\n\r\n    const handleSaveNewCharge = () => {\r\n        localStorage.setItem('charges', JSON.stringify([...charges, newCharge]));\r\n        setCharges([...charges, newCharge]);\r\n        setNewCharge(null);\r\n        setEditableChargeId(null);\r\n    };\r\n\r\n    const handleSaveEditableCharge = () => {\r\n        const updatedCharges = charges.map((charge) => {\r\n            if (charge.id === newCharge.id) {\r\n                return newCharge;\r\n            }\r\n            return charge;\r\n        });\r\n\r\n        localStorage.setItem('charges', JSON.stringify(updatedCharges));\r\n\r\n        setCharges(updatedCharges);\r\n        setNewCharge(null);\r\n        setEditableChargeId(null);\r\n    };\r\n\r\n    const handleCancelNewCharge = () => {\r\n        setNewCharge(null);\r\n        setEditableChargeId(null);\r\n    };\r\n\r\n    const handleChargeChange = (charge) => {\r\n        setNewCharge(charge);\r\n    };\r\n\r\n    const handleEditCharge = (charge) => {\r\n        setEditableChargeId(charge.id);\r\n        setNewCharge(charge);\r\n    };\r\n\r\n    const handleDeleteCharge = (id) => {\r\n        const arrayCharges = charges.filter((charge) => charge.id !== id);\r\n\r\n        localStorage.setItem('charges', JSON.stringify(arrayCharges));\r\n\r\n        setCharges([...arrayCharges]);\r\n    };\r\n\r\n    const buildChargeRow = (charge) => {\r\n        return (\r\n            <tr key={charge.id}>\r\n                <td>{charge.category}</td>\r\n                <td>{charge.description}</td>\r\n                <td>{charge.date}</td>\r\n                <td>{charge.money}</td>\r\n                <td>\r\n                    <div className=\"action-buttons\">\r\n                        <Icon iconName=\"edit\" onClick={() => handleEditCharge(charge)} />\r\n                        <Icon iconName=\"delete\" onClick={() => handleDeleteCharge(charge.id)} />\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    const onSort = (category) => {\r\n        const cloneData = charges.map((item) => {\r\n            if (typeof item.date === 'string' || typeof moneyFormat === 'string') {\r\n                const —ÅorrectDateFormat = Date.parse(item.date);\r\n                const moneyFormat = item.money.replace(/\\D/g, '');\r\n                return {\r\n                    ...item,\r\n                    money: Number(moneyFormat),\r\n                    date: —ÅorrectDateFormat,\r\n                };\r\n            }\r\n            return item;\r\n        });\r\n\r\n        const sortType = sort === `desc` ? `asc` : `desc`;\r\n        setSort(sortType);\r\n        setSortField(category);\r\n        const orderedData = _.orderBy(cloneData, category.toLowerCase(), sortType);\r\n\r\n        const correctData = orderedData.map((item) => {\r\n            const date = new Date(item.date);\r\n\r\n            const correctDay = (date) =>\r\n                date.getDate() <= 9 ? `0${date.getDate()}` : `${date.getDate()}`;\r\n            const correctMounth = (date) =>\r\n                date.getMonth() <= 8 ? `0${date.getMonth() + 1}` : `${date.getMonth() + 1}`;\r\n\r\n            const correctDateFormat = `${correctMounth(date)}/${correctDay(\r\n                date\r\n            )}/${date.getFullYear()}`;\r\n            return {\r\n                ...item,\r\n                money: item.money + '$',\r\n                date: correctDateFormat,\r\n            };\r\n        });\r\n        setCharges(correctData);\r\n    };\r\n    return (\r\n        <div className=\"charge-table\">\r\n            <div className=\"d-flex justify-content-end pb-3\">\r\n                <Icon iconName=\"add\" size=\"big\" onClick={handleAddNewCharge} />\r\n            </div>\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        {headers.map((header, index) => (\r\n                            <th\r\n                                key={index}\r\n                                onClick={onSort.bind(null, `${header}`)}\r\n                                className={sortField === header ? 'sort' : 'notSorting'}\r\n                            >\r\n                                {header}\r\n                            </th>\r\n                        ))}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {charges.map((charge) => {\r\n                        if (editableChargeId === charge.id) {\r\n                            return (\r\n                                <ChargeRow\r\n                                    key={charge.id}\r\n                                    {...newCharge}\r\n                                    onChargeChange={handleChargeChange}\r\n                                    onSaveNewCharge={handleSaveEditableCharge}\r\n                                    onCancelNewCharge={handleCancelNewCharge}\r\n                                />\r\n                            );\r\n                        } else {\r\n                            return buildChargeRow(charge);\r\n                        }\r\n                    })}\r\n                    {newCharge && !editableChargeId && (\r\n                        <ChargeRow\r\n                            key={newCharge.id}\r\n                            {...newCharge}\r\n                            onChargeChange={handleChargeChange}\r\n                            onSaveNewCharge={handleSaveNewCharge}\r\n                            onCancelNewCharge={handleCancelNewCharge}\r\n                        />\r\n                    )}\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TableCharges;\r\n","import React from 'react';\r\nimport CurrentBalance from './CurrentBalance';\r\nimport { Tabs, Tab } from 'react-bootstrap';\r\n\r\nimport './ChargesPage.css';\r\nimport TableCharges from './TableCharges';\r\n\r\nfunction ChargesPage() {\r\n    return (\r\n        <div className=\"page\">\r\n            <nav className=\"navigation-wrapper\">\r\n                <CurrentBalance />\r\n            </nav>\r\n            <div className=\"charges-page\">\r\n                <Tabs defaultActiveKey=\"charges\" id=\"uncontrolled-tab-example\" className=\"mb-5\">\r\n                    <Tab eventKey=\"charges\" title=\"Charges\">\r\n                        <TableCharges />\r\n                    </Tab>\r\n                    <Tab eventKey=\"incomes\" title=\"Incomes\">\r\n                        <h2>Any content 2</h2>\r\n                    </Tab>\r\n                </Tabs>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChargesPage;\r\n","import logo from './logo.svg';\r\nimport './App.css';\r\nimport ChargesPages from './charges/ChargesPage';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <ChargesPages />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}