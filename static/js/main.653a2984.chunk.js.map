{"version":3,"sources":["logo.svg","charges/CurrentBalance.jsx","img/icons/png-icons/png/056-plus.png","img/icons/png-icons/png/058-error.png","img/icons/png-icons/png/218-edit.png","img/icons/png-icons/png/059-success.png","img/icons/png-icons/png/057-minus.png","charges/Icon.jsx","charges/ChargeRow.jsx","charges/TableCharges.jsx","charges/ChargesPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["CurrentBalance","className","Icon","iconName","size","onClick","src","AddIcon","DeleteIcon","EditIcon","SaveIcon","CancelIcon","getUrlByName","alt","categoriesOptions","value","label","ChargeRow","id","category","description","date","money","onChargeChange","onSaveNewCharge","onCancelNewCharge","onChange","selectedOption","Form","Control","type","placeholder","target","formatDate","parseDate","onDayChange","day","TableCharges","storedCharges","JSON","parse","localStorage","getItem","useState","charges","setCharges","newCharge","setNewCharge","editableChargeId","setEditableChargeId","handleSaveEditableCharge","updatedCharges","map","charge","setItem","stringify","handleCancelNewCharge","handleChargeChange","buildChargeRow","handleEditCharge","arrayCharges","filter","handleDeleteCharge","uuidv4","Date","Table","striped","bordered","hover","header","ChargesPage","Tabs","defaultActiveKey","Tab","eventKey","title","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.653a2984.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport './CurrentBalance.css';\n\n\nfunction CurrentBalance() {\n\treturn (\n\t\t<div className=\"balance-block\">\n\t\t\t<div className=\"balance-text-sum\">$100000</div>\n\t\t\t<div className=\"balance-text\">Current Balance</div>\n\t\t</div>\n\t);\n} \n\nexport default CurrentBalance;\n","export default __webpack_public_path__ + \"static/media/056-plus.a0162b51.png\";","export default __webpack_public_path__ + \"static/media/058-error.7568cf92.png\";","export default __webpack_public_path__ + \"static/media/218-edit.3ae610dc.png\";","export default __webpack_public_path__ + \"static/media/059-success.6776e7db.png\";","export default __webpack_public_path__ + \"static/media/057-minus.f7328416.png\";","import React from 'react';\nimport AddIcon from '../img/icons/png-icons/png/056-plus.png';\nimport DeleteIcon from '../img/icons/png-icons/png/058-error.png';\nimport EditIcon from '../img/icons/png-icons/png/218-edit.png';\nimport SaveIcon from '../img/icons/png-icons/png/059-success.png';\nimport CancelIcon from '../img/icons/png-icons/png/057-minus.png';\nimport './Icon.css'\n\nfunction Icon({iconName, size=\"small\", onClick}) {\n\tfunction getUrlByName(iconName) {\n\t\tswitch(iconName){\n\t\t\tcase \"add\": return AddIcon;\n\t\t\tcase \"delete\": return DeleteIcon;\n\t\t\tcase \"edit\": return EditIcon;\n\t\t\tcase \"save\": return SaveIcon;\n\t\t\tcase \"cancel\": return CancelIcon; \n\t\t}\n\t}\n  return (\n    <div className={`icon-button-${size}`} onClick={onClick}>\n\t\t\t<img src={getUrlByName(iconName)} alt={`${iconName} icon button`}/>\n\t\t</div>\n    );\n}\n\nexport default Icon;","import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport Select from 'react-select';\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\nimport 'react-day-picker/lib/style.css';\nimport MomentLocaleUtils, {\n  formatDate,\n  parseDate,\n} from 'react-day-picker/moment';\nimport './ChargeRow.css';\nimport Icon from './Icon';\n\nconst categoriesOptions = [\n  { value: 'food', label: 'Food' },\n  { value: 'clothes', label: 'Clothes' },\n\t{ value: 'restaurant', label: 'Restaurant' },\n\t{ value: 'utility bills', label: 'Utility bills' },\n  { value: 'pets', label: 'Pets' },\n];\n\nfunction ChargeRow({id, category, description, date, money, onChargeChange, onSaveNewCharge, onCancelNewCharge}) {\n\treturn (\n\t\t<tr className=\"charge-row\">\n\t\t\t<td>\n\t\t\t\t<Select\n\t\t\t\t\tvalue={{value: category, label: category}}\n\t\t\t\t\tonChange={(selectedOption) => onChargeChange({id, description, date, money, category: selectedOption.value})}\n\t\t\t\t\tcategoriesOptions={categoriesOptions}\n      \t/>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<Form.Control\n\t\t\t\t type=\"text\" \n\t\t\t\t placeholder=\"Description\" \n\t\t\t\t onChange={({target}) => onChargeChange({id, description: target.value, date, money, category})} \n\t\t\t\t value={description}/>\n\t\t\t\t </td>\n\t\t\t\t <td>\n\t\t\t\t <DayPickerInput\n        formatDate={formatDate}\n        parseDate={parseDate}\n\t\t\t\tvalue={formatDate(date)}\n\t\t\t\tonDayChange={day => onChargeChange({id, description, date: formatDate(day), money, category})}\n      \t/>\n\t\t\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<Form.Control \n\t\t\t\ttype=\"text\" \n\t\t\t\tplaceholder=\"Money\" \n\t\t\t\tonChange={({target}) => onChargeChange({id, description, date, money: target.value, category})} \n\t\t\t\tvalue={money}/>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<div className=\"action-buttons\">\n\t\t\t\t\t<Icon iconName=\"save\"\n\t\t\t\t\t\tonClick={onSaveNewCharge}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Icon iconName=\"cancel\"\n\t\t\t\t\t\tonClick={onCancelNewCharge}\n\t\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</td>\n\t\t</tr>\n\t);\n} \n\nexport default ChargeRow;","import React, { useState } from 'react';\n\nimport {Table} from 'react-bootstrap';\n\nimport MomentLocaleUtils, {\n\tformatDate,\n\tparseDate,\n  } from 'react-day-picker/moment';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nimport ChargeRow from './ChargeRow';\nimport './TableCharges.css';\nimport Icon from './Icon';\n\nfunction TableCharges() {\n\tconst storedCharges = JSON.parse(localStorage.getItem(\"charges\"));\n\n\tconst [charges, setCharges] = useState(storedCharges || []);\n\tconst [newCharge, setNewCharge] = useState(null);\n    const [editableChargeId, setEditableChargeId] = useState();\n    \n    const headers = ['Category', 'Description', 'Date', 'Money', 'Action'];\n\n    const handleAddNewCharge = () => {\n\t\tsetNewCharge({\n\t\t\tid: uuidv4(),\n\t\t\tcategory: '',\n\t\t\tdescription : '',\n\t\t\tdate: formatDate(new Date()),\n\t\t\tmoney: '$'\n\t\t})\n\t}; \n\n\tconst handleSaveNewCharge = () => {\n\t\tlocalStorage.setItem(\"charges\", JSON.stringify([...charges, newCharge]));\n\t\tsetCharges([...charges, newCharge]);\n\t\tsetNewCharge(null);\n\t\tsetEditableChargeId(null);\n\t}\n\n\tconst handleSaveEditableCharge = () => {\n\t\tconst updatedCharges = charges.map((charge) => {\n\t\t\tif(charge.id === newCharge.id){\n\t\t\t\treturn newCharge;\n\t\t\t}\n\t\t\treturn charge;\n\t\t})\n\n\t\tlocalStorage.setItem(\"charges\", JSON.stringify(updatedCharges));\n\n\t\tsetCharges(updatedCharges);\n\t\tsetNewCharge(null);\n\t\tsetEditableChargeId(null);\n\t}\n\n\tconst handleCancelNewCharge = () => {\n\t\tsetNewCharge(null);\n\t\tsetEditableChargeId(null);\n\t}\n\n\tconst handleChargeChange = (charge) => {\n\t\tsetNewCharge(charge);\n\t}\n\n\tconst handleEditCharge = (charge) => {\n\t\tsetEditableChargeId(charge.id);\n\t\tsetNewCharge(charge);\n\t}\n\n\tconst handleDeleteCharge = (id) => {\n\t\tconst arrayCharges = charges.filter((charge) => charge.id !== id);\n\n\t\tlocalStorage.setItem(\"charges\", JSON.stringify(arrayCharges));\n\n\t\tsetCharges([...arrayCharges]);\n\t}\n\n\tconst buildChargeRow = (charge) => {\n\t\treturn (\n\t\t\t<tr key={charge.id}>\n\t\t\t\t<td>{charge.category}</td>\n\t\t\t\t<td>{charge.description}</td>\n\t\t\t\t<td>{charge.date}</td>\n\t\t\t\t<td>{charge.money}</td>\n\t\t\t\t<td>\t\n\t\t\t\t\t<div className=\"action-buttons\">\n\t\t\t\t\t<Icon iconName=\"edit\"\n\t\t\t\t\t\tonClick={() => handleEditCharge(charge)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t<Icon iconName=\"delete\"\n\t\t\t\t\t\tonClick={() => handleDeleteCharge(charge.id)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</td>\n\t\t\t</tr>)\n    }\n\n    return (\n\t\t<div className=\"charge-table\">\n\t\t<div className=\"d-flex justify-content-end pb-3\">\n\t\t\t<Icon iconName=\"add\"\n\t\t\t\tsize=\"big\"\n\t\t\t\tonClick={handleAddNewCharge}\n\t\t\t\t\t\t/>\n\t\t</div>\n        <Table striped bordered hover>   \n            <thead>\n                <tr> \n                    {headers.map((header) => <th>{header}</th>)}\n                </tr>\n            </thead>\n            <tbody>\n                {charges.map((charge) => {\n                    if (editableChargeId === charge.id){\n                        return (<ChargeRow key={charge.id} {...newCharge} \n                        onChargeChange={handleChargeChange} \n                        onSaveNewCharge={handleSaveEditableCharge} \n                        onCancelNewCharge={handleCancelNewCharge} \n                                />)\n                    } else{\n                        return buildChargeRow(charge);\n                    }\n                })}\n                {newCharge && !editableChargeId &&\n                    (<ChargeRow key={newCharge.id} {...newCharge}\n                    onChargeChange={handleChargeChange}\n                    onSaveNewCharge={handleSaveNewCharge}\n                    onCancelNewCharge={handleCancelNewCharge}\n                    />)}\n            </tbody>\n        </Table>\n\t\t</div>\n    );\n}\n\nexport default TableCharges;\n","import React from 'react';\nimport CurrentBalance from './CurrentBalance';\nimport { Tabs, Tab } from 'react-bootstrap';\n\n\nimport './ChargesPage.css';\nimport TableCharges from './TableCharges';\n\nfunction ChargesPage () {\n\treturn (\n\t\t<div className=\"page\">\n\t\t\t<nav className=\"navigation-wrapper\">\n\t\t\t\t<CurrentBalance />\n\t\t\t</nav>\n\t\t\t<div className=\"charges-page\">\n\t\t\t<Tabs defaultActiveKey=\"charges\" id=\"uncontrolled-tab-example\" className=\"mb-5\">\n\t\t\t\t<Tab eventKey=\"charges\" title=\"Charges\">\n\t\t\t\t\t<TableCharges />\n\t\t\t\t</Tab>\n\t\t\t\t<Tab eventKey=\"incomes\" title=\"Incomes\">\n\t\t\t\t\t<h2>Any content 2</h2>\n\t\t\t\t</Tab>\n\t\t\t</Tabs>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default ChargesPage;\n","import logo from './logo.svg';\nimport './App.css';\nimport ChargesPages from './charges/ChargesPage';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <ChargesPages />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}